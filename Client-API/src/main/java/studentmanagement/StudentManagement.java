
package studentmanagement;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentManagement", targetNamespace = "http://StudentManagement/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentManagement {


    /**
     * 
     * @param student
     * @return
     *     returns boolean
     * @throws FileNotFoundException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @WebResult(name = "isRegistered", partName = "isRegistered")
    @Action(input = "http://StudentManagement/StudentManagement/isRegisteredRequest", output = "http://StudentManagement/StudentManagement/isRegisteredResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://StudentManagement/StudentManagement/isRegistered/Fault/FileNotFoundException"),
        @FaultAction(className = JAXBException_Exception.class, value = "http://StudentManagement/StudentManagement/isRegistered/Fault/JAXBException")
    })
    public boolean isRegistered(
        @WebParam(name = "Student", partName = "Student")
        Student student)
        throws FileNotFoundException_Exception, JAXBException_Exception
    ;

    /**
     * 
     * @param registerStudentUser
     * @throws FileNotFoundException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @Action(input = "http://StudentManagement/StudentManagement/registerUserRequest", output = "http://StudentManagement/StudentManagement/registerUserResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://StudentManagement/StudentManagement/registerUser/Fault/FileNotFoundException"),
        @FaultAction(className = JAXBException_Exception.class, value = "http://StudentManagement/StudentManagement/registerUser/Fault/JAXBException")
    })
    public void registerUser(
        @WebParam(name = "registerStudentUser", partName = "registerStudentUser")
        Student registerStudentUser)
        throws FileNotFoundException_Exception, JAXBException_Exception
    ;

    /**
     * 
     * @param getUserStudent
     * @return
     *     returns studentmanagement.Student
     * @throws FileNotFoundException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @WebResult(name = "getUser", partName = "getUser")
    @Action(input = "http://StudentManagement/StudentManagement/getUserRequest", output = "http://StudentManagement/StudentManagement/getUserResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://StudentManagement/StudentManagement/getUser/Fault/FileNotFoundException"),
        @FaultAction(className = JAXBException_Exception.class, value = "http://StudentManagement/StudentManagement/getUser/Fault/JAXBException")
    })
    public Student getUser(
        @WebParam(name = "getUserStudent", partName = "getUserStudent")
        int getUserStudent)
        throws FileNotFoundException_Exception, JAXBException_Exception
    ;

    /**
     * 
     * @param enrollStudentOnModule
     * @param module
     * @throws FileNotFoundException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @Action(input = "http://StudentManagement/StudentManagement/enrollStudentRequest", output = "http://StudentManagement/StudentManagement/enrollStudentResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://StudentManagement/StudentManagement/enrollStudent/Fault/FileNotFoundException"),
        @FaultAction(className = JAXBException_Exception.class, value = "http://StudentManagement/StudentManagement/enrollStudent/Fault/JAXBException")
    })
    public void enrollStudent(
        @WebParam(name = "enrollStudentOnModule", partName = "enrollStudentOnModule")
        Student enrollStudentOnModule,
        @WebParam(name = "Module", partName = "Module")
        StudentModule module)
        throws FileNotFoundException_Exception, JAXBException_Exception
    ;

    /**
     * 
     * @param student
     * @param moduleCode
     * @return
     *     returns boolean
     * @throws FileNotFoundException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @WebResult(name = "isEnrolled", partName = "isEnrolled")
    @Action(input = "http://StudentManagement/StudentManagement/isEnrolledRequest", output = "http://StudentManagement/StudentManagement/isEnrolledResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://StudentManagement/StudentManagement/isEnrolled/Fault/FileNotFoundException"),
        @FaultAction(className = JAXBException_Exception.class, value = "http://StudentManagement/StudentManagement/isEnrolled/Fault/JAXBException")
    })
    public boolean isEnrolled(
        @WebParam(name = "Student", partName = "Student")
        Student student,
        @WebParam(name = "ModuleCode", partName = "ModuleCode")
        ModuleCode moduleCode)
        throws FileNotFoundException_Exception, JAXBException_Exception
    ;

    /**
     * 
     * @param student
     * @param mark
     * @param moduleCode
     * @return
     *     returns boolean
     * @throws FileNotFoundException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @WebResult(name = "insertMark", partName = "insertMark")
    @Action(input = "http://StudentManagement/StudentManagement/insertMarkRequest", output = "http://StudentManagement/StudentManagement/insertMarkResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://StudentManagement/StudentManagement/insertMark/Fault/FileNotFoundException"),
        @FaultAction(className = JAXBException_Exception.class, value = "http://StudentManagement/StudentManagement/insertMark/Fault/JAXBException")
    })
    public boolean insertMark(
        @WebParam(name = "Student", partName = "Student")
        Student student,
        @WebParam(name = "ModuleCode", partName = "ModuleCode")
        ModuleCode moduleCode,
        @WebParam(name = "Mark", partName = "Mark")
        Mark mark)
        throws FileNotFoundException_Exception, JAXBException_Exception
    ;

    /**
     * 
     * @param student
     * @return
     *     returns java.lang.String
     * @throws FileNotFoundException_Exception
     * @throws JAXBException_Exception
     */
    @WebMethod
    @WebResult(name = "retrieveMarks", partName = "retrieveMarks")
    @Action(input = "http://StudentManagement/StudentManagement/retrieveMarksRequest", output = "http://StudentManagement/StudentManagement/retrieveMarksResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://StudentManagement/StudentManagement/retrieveMarks/Fault/FileNotFoundException"),
        @FaultAction(className = JAXBException_Exception.class, value = "http://StudentManagement/StudentManagement/retrieveMarks/Fault/JAXBException")
    })
    public String retrieveMarks(
        @WebParam(name = "Student", partName = "Student")
        Student student)
        throws FileNotFoundException_Exception, JAXBException_Exception
    ;

}
